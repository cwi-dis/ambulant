This documents describes how we use the Mercurial revision control tool in the Ambulant project.

We maintain the following repositories:
---------------------------------------
source code:			ssh://hg@ambulantplayer.org/hg/ambulant
example/test documents:		ssh://hg@ambulantplayer.org/hg/ambulant-documents
private documents:		ssh://hg@ambulantplayer.org/hgpriv/ambulant-private

Web interface:			http://ambulantplayer.org/cgi-bin/hgweb.cgi/hg/ambulant/

Getting the sources:
--------------------
hg clone ssh://hg@ambulantplayer.org/hg/ambulant ambulant

Work flow on the 'default' branch:
----------------------------------
hg pull; hg  update; <edit files>; <test changes>; hg commit -m"My changes"; hg push

Creating a specialized branch:
-----------------------------
hg branch <branch name>
Then work as above.

Merging a branch with the 'default' branch:
-------------------------------------------
1. Finalize work on branch:
<final tests>; hg commit -m"Done with <branch name>"; hg push

2. Create a temporary copy of your <branch name> and merge it with the 'default' branch:
cd ..; hg clone ssh://hg@ambulantplayer.org/hg/ambulant ambulant-tmp; cd ambulant-tmp; hg up -r <branch name>
hg merge -r default; hg resolve -l
This shows all files with conflicts, then for each <file> that has a conflict:
	<fix conflicts>
	hg resolve -m <file>
hg commit -m "Merged 'default' into <branch name>"
<repeat tests>; hg push; cd ..; rm -fr ambulant-tmp

3. Test the merged <branch name> on other platforms:
	hg clone ssh://hg@ambulantplayer.org/hg/ambulant ambulant-tmp; cd ambulant-tmp; hg up -r <branch name>
	<build and test>
	cd ..; rm -fr ambulant-tmp
	
4. Finally merge with the 'default' branch with your <branch name>:
	hg clone ssh://hg@ambulantplayer.org/hg/ambulant ambulant-tmp; cd ambulant-tmp; hg merge -r  <branch name>
	hg resolve -l
	<fix conflicts, if any, and do: hg resolve - m for each conflicting file>
	hg commit -m"Merged  <branch name> with 'default'"

The advantage of this apperently redundant approach is that if anything fails
somewhere during the merge operation, it is straightforward to recover.