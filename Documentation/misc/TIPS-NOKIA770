Here are some pointers how to work with Nokia 770 (2006 Software Edition).

1. For software development, you need a Linux box with root access, download
   and install scratxhbox as described in: 
   http://maemo.org/development/sdks/maemo-3-x--bora-.html
   Use the following installers scripts found there in this order:
   - Scratbox installer script
   - SDK installer script

   For the scratchbox to work, I had to boot FC5 kernel and as root:
   # echo 0 > /proc/sys/kernel/vdso

2. Other useful material is found in:
   http://maemo.org/development/documentation/tutorials/Maemo_tutorial_bora.html
   and 
   http://maemo.org/development/documentation/how-tos/3-x/

3. Creation of a web-installable debian package for the
   Nokia 770/800 (OS2006/OS2007 Software Edition).

   First, ffmpeg-cvs needs to be obtained from the www.AmbulantPlayer.org seperately 
   and unpacked in 'third_party_packages'. In 'third_party_packages/ffmpeg-cvs', type:
   ./configure  --cpu=arm;make

   Next, in toplevel ambulant directory type:
   ./autogen.sh --prefix=/usr --with-qt=no --with-gtk --with-nokia770 --host=i386 --with-gstreamer --build=arm
   make
   Then in 'src/player_gtk/nokia770', type: ./create_installer

   Finally, copy 'src/player_gtk/ambulantplayer-app_1.8_armel.deb' to a website
   and point the webbrowser on the Nikia770/800 to that website.
   It will hen install automatically.

4. Setting up USB networking (Fedora Core 5).
   I made 2 handy little scripts in sandbox/Nokia770Scripts, both to be run as root:
	- usbnet: to be run on Nokia770, to make the Nokia look like a network
		  connection to the PC rather than an extra removable disc.
	- usbNokia770: to be run on the PC. 

5. Remote debugging is possible as follows (once you have USB networking):
   a. From the scratchbox (in ARMEL mode) copy /usr/bin/gdbserver to the Nokia 770
      device. 
   b. Compile all sources of your program with -g -O0 flags.
   c. Copy a stripped version of your program to the device and leave a non-stripped
      version on the same location in your scratchbox environment (in ARMEL mode):
      if your stripped program on the 770 is located in /home/user/MyProgram, then
      have the non-stripped version in the scratchbox in  /home/user/MyProgram, or
      outside the scratchbox in:
      /scratchbox/users/<yourname>/home/user/MyProgram
      
   d. on the Nokia 770, start the the program under gdbserver, e.g.:
      770> gdbserver 192.168.2.15:2222 ./MyProgram

      in the scratchbox (in ARM mode):
      [sbox-SDK_ARM: ~/]: gdb ./MyProgram
      gdb> target remote  192.168.2.15:2222
      gdb> cont

      On the Nokia, you need to restart gdbserver as above each time your program
      terminates or crashes.

   e. It is also possible to run "ddd". This must be started outside the scratchbox
      with the command:
      ddd --debugger '/scratchbox/login gdb'
      Inside ddd, with  File->Open Program select:
	 /scratchbox/users/<yourname>/home/user/MyProgram
      Then in the gdb window type:target remote  192.168.2.15:2222
      You can now browse sources, define breakpoints etc. before clicking "Cont".
      Don't use "Run", that doesn't work with gdbserver.

   f. On the device, some libraries have slightly different names as inside the
      scratchbox, causing "gdb" annoyingly complaining about "Unresolved ..." libraries.
      You can remedy this by copying the affected libries from the Nokia770 to the
      right location inside the scratchbox.
      When in "gdb" the program stops because of "SIG32" interrupt, this often means
      that the stripped version on the Nokia770 is not exactly the same version of the
      program as the unstrippped one on the scratchbox.

Kees Blom May 17, 2006.
	  Sept.8, 2006. (updated for 2006 Software Edition)
	  Jan.18, 2007  (updated for ambulant-1.8 release)