<?xml version="1.0" encoding="iso-8859-1"?>
<!-- Generator: Adobe Illustrator 9.0, SVG Export Plug-In  -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20000303 Stylable//EN"   "http://www.w3.org/TR/2000/03/WD-SVG-20000303/DTD/svg-20000303-stylable.dtd" [
	<!ENTITY st0 "fill:#FFFFFF;stroke-dasharray:4;">
	<!ENTITY st1 "fill:#FFFFFF;">
	<!ENTITY st2 "fill:none;">
	<!ENTITY st3 "fill:#CCCCCC;">
	<!ENTITY st4 "font-family:'BookAntiqua-Bold';">
	<!ENTITY st5 "font-family:'ArialMT';">
	<!ENTITY st6 "fill:none;stroke-dasharray:4;">
	<!ENTITY st7 "font-size:12;">
	<!ENTITY st8 "font-size:18;">
	<!ENTITY st9 "fill-rule:nonzero;clip-rule:nonzero;stroke:#000000;stroke-miterlimit:4;">
	<!ENTITY st10 "stroke:none;">
]>
<svg  width="500.342pt" height="552.873pt" viewBox="0 0 500.342 552.873" xml:space="preserve">
	<style type="text/css">
	<![CDATA[
@font-face{font-family:'BookAntiqua-Bold';src:url("data:;base64,\
T1RUTwACACAAAQAAQ0ZGIPSFyW8AAAAsAAAEGmNtYXAAUwEJAAAESAAAADwBAAQCAAEBARFCb29r\
QW50aXF1YS1Cb2xkAAEBATT4GwH4FAT7pv1HHAmLHAgsBR6gAEiCgSX/i4seoABIgoEl/4uLDAf3\
WQ+MEPdiEZL6pxIAAQEBbkJvb2sgQW50aXF1YShUTSkgaXMgYSB0cmFkZW1hcmsgb2YgVGhlIE1v\
bm90eXBlIENvcnBvcmF0aW9uIHdoaWNoIG1heSBiZSByZWdpc3RlcmVkIGluIGNlcnRhaW4ganVy\
aXNkaWN0aW9ucy4AAAAALwBFAEYAUAAFAgABABwBIgIHArcDN/gp95QWHAUA+pQc+wAH/nSrFfpU\
HATA/lQGDvjTz4QV3wfcjruRmZKUkJKUkJeSm5DDjewIj/c0jfcN3BqJ+DsF9wSHzIScHoeVhZKC\
kH6TWJMzkgjfB4j02Ym+G8PLjY7SH/ct+1j3Qvtp91X7efcV+y33A/sT6CcI+CAH9yqJ9xWH9wEe\
iMyGsoOah5OEkYCOgI5dkDiRCN8HiNTTidMb7uSNjtsfNwdAhl6GfIWCiISGhoWGhYeDiIKGe4lY\
ijSI/CQYifwnBfsAjfsAkPsAHn59OppSlGqQGfs/91L7Y/eD+4f3s/sP9yUo9w9A7gj8GQchjfsU\
jvspHo37ApBMknqOhJCFkoeYhLuE3oUINweQ+wA+jVwbZDiJhvsTHw75wfovFfdBB/aJyoacHoiY\
hJSCkIGQXo46jQjTB/cznPcaq/cAuqVzGIQghyWKK4T9pRj7F407kG4ejnmRf5aElYS0hNKFCDgH\
jzo7jT4bU1eJh1ofepeTzpHCjrQZXmlCUSg4CH1lZ4RqG/sDL7TeQh9B3Wb3AfcdGs6Tx5rCHprB\
nLSgpp+mtK7Itt7FyLCymgiasbWSuBusrIiErR+thK6Ar3wI+2oEbLhnrGOhCKFjX5ZaG0ZXc1pm\
H2ZaeTj7Bxr7C6IzuFAeULjEbtEbureZprQfs6ajpJKiCJKijuH3KRoOIPoR91AVqG5eK1ttWHVU\
fBl8VFCDTRv7JfsHteA4HzffYfcK9y0a7JfbpMoen76strmtuK3Aq8eqCKrGzZrSG/cB5m1O0h/S\
Tq8o+xsaeopyiWke+zhtBYhYQokrG/ttBpX7B601xlEIUcbVbuYbsbGRlrAfsJawm7CgCPzC+BcV\
hsfHiMcbwMKOkMUfjLoF3XzHbbEesG1inlgbZ2yCenEfcXl4cn5rfmuCToQyCA6T3fhpFfcysPcL\
1doe6eT3FLr3Oxv3O/cNZUDYH9hAsfsL+zca+ztf+xUzMB4wMvsPXvsxG/sv+wm14DofOuBj9w/3\
NRr3qdAV+0Wi+xO4QB5RrsBu0hvJu6S8rR+svJzl9xYa90d29w9i0B7CaVamQxtNWnJZaB9nWXk2\
+wwaDhwE4xT6/xUAAAAAAAEAAAADAAAADAAEADAAAAAIAAgAAgAAAE4AZQBv//8AAABOAGQAb///\
/7P/nv+VAAEAAAAAAAAAAA==")}
@font-face{font-family:'ArialMT';src:url("data:;base64,\
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")}
	]]>
	</style>
	<g id="Layer_x0020_1" style="&st9; &st5; &st7;">
		<path style="&st1;" d="M469.926,120.172H329.784V47.123h140.143v73.049z"/>
		<text transform="matrix(1 0 0 1 356.354 75.832)"><tspan x="0" y="0" style="&st10;">lib::node_context</tspan></text>
		<text transform="matrix(1 0 0 1 364.4946 59.4487)"><tspan x="0" y="0" style="&st10;">&lt;&lt;interface&gt;&gt;</tspan></text>
		<path style="&st2;" d="M329.856,85.064h140.486"/>
		<text transform="matrix(1 0 0 1 336.188 97.3975)"><tspan x="0" y="0" style="&st10;">get_namespace_prefix()</tspan></text>
		<text transform="matrix(1 0 0 1 187 18)"><tspan x="0" y="0" style="&st10; &st4; &st8;">Node</tspan></text>
		<text transform="matrix(1 0 0 1 335.8423 112.2461)"><tspan x="0" y="0" style="&st10;">resolve_url()</tspan></text>
		<path style="&st1;" d="M181.836,425.666H41.694V46.117h140.143v379.548z"/>
		<text transform="matrix(1 0 0 1 89.7642 60.8262)"><tspan x="0" y="0" style="&st10;">lib::node</tspan></text>
		<path style="&st2;" d="M41.432,67.059h139.82"/>
		<path style="&st2;" d="M41.766,71.058h140.486"/>
		<path d="M35.02,145.943l-6.471-3.75l6.471-3.75l6.109,3.543l-6.109,3.957z"/>
		<text transform="matrix(1 0 0 1 11.2461 91.9995)"><tspan x="0" y="0" style="&st10;">child</tspan></text>
		<path style="&st6;" d="M31.342,393.246"/>
		<text transform="matrix(1 0 0 1 48.3423 282.2461)"><tspan x="0" y="0" style="&st10;">get_name()</tspan></text>
		<text transform="matrix(1 0 0 1 48.3423 296.4463)"><tspan x="0" y="0" style="&st10;">get_attribute()</tspan></text>
		<text transform="matrix(1 0 0 1 48.3423 310.6465)"><tspan x="0" y="0" style="&st10;">get_data()</tspan></text>
		<text transform="matrix(1 0 0 1 48.3423 324.8477)"><tspan x="0" y="0" style="&st10;">get_url()</tspan></text>
		<text transform="matrix(1 0 0 1 48.3423 192.5479)" style="&st10;"><tspan x="0" y="0">&lt;&lt;search&gt;&gt;</tspan><tspan x="0" y="14.5">locate_node(): *node</tspan><tspan x="0" y="29">get_first_child(): *node</tspan><tspan x="0" y="43.5">get_last_child(): *node</tspan><tspan x="0" y="58">get_root(): *node</tspan></text>
		<path style="&st1;" d="M182.551,552.373H42.409v-73.049h140.143v73.049z"/>
		<text transform="matrix(1 0 0 1 65.979 491.5327)"><tspan x="0" y="0" style="&st10;">lib::tree_iterator</tspan></text>
		<path style="&st2;" d="M42.147,501.265h139.82"/>
		<path style="&st2;" d="M42.481,506.263h140.486"/>
		<path style="&st0;" d="M211.502,494.757h-58.258v-24.455h58.258v24.455z"/>
		<text transform="matrix(1 0 0 1 161.3296 486.7983)"><tspan x="0" y="0" style="&st10;">lib::node</tspan></text>
		<text transform="matrix(1 0 0 1 51.3423 519.7456)"><tspan x="0" y="0" style="&st10;">operator++()</tspan></text>
		<text transform="matrix(1 0 0 1 50.8423 533.2456)"><tspan x="0" y="0" style="&st10;">operator++(int)</tspan></text>
		<text transform="matrix(1 0 0 1 51.8423 546.7456)"><tspan x="0" y="0" style="&st10;">operator*()</tspan></text>
		<text transform="matrix(1 0 0 1 46.814 82.5479)"><tspan x="0" y="0" style="&st10;">&lt;&lt;navigation&gt;&gt;</tspan></text>
		<text transform="matrix(1 0 0 1 50.3423 97.2461)" style="&st10;"><tspan x="0" y="0">down(): *node</tspan><tspan x="0" y="14.5">next(): *node</tspan><tspan x="0" y="29">up(): *node</tspan></text>
		<text transform="matrix(1 0 0 1 48.3423 269.2461)"><tspan x="0" y="0" style="&st10;">&lt;&lt;queries&gt;&gt;</tspan></text>
		<text transform="matrix(1 0 0 1 48.3423 144.7461)" style="&st10;"><tspan x="0" y="0">&lt;&lt;iterators&gt;&gt;</tspan><tspan x="0" y="14.5">begin(): iterator</tspan><tspan x="0" y="29">end(): iterator</tspan></text>
		<text transform="matrix(1 0 0 1 47.8423 345.7461)" style="&st10;"><tspan x="0" y="0">&lt;&lt;build&gt;&gt;</tspan><tspan x="0" y="14.5">append_child()</tspan><tspan x="0" y="29">set_attribute()</tspan><tspan x="0" y="43.5">set_namespace()</tspan><tspan x="0" y="58">append_data()</tspan><tspan x="0" y="72.5">clone()</tspan></text>
		<path style="&st2;" d="M28.549,142.193H0.5V98.384h41.096"/>
		<path style="&st2;" d="M41.226,241.754H0.815v-43.835h40.411"/>
		<text transform="matrix(1 0 0 1 1.9795 158.6582)"><tspan x="0" y="0" style="&st10;">parent</tspan></text>
		<text transform="matrix(1 0 0 1 4.8027 193.5215)"><tspan x="0" y="0" style="&st10;">next</tspan></text>
		<path d="M29.641,185.003l7.47,4.854l-7.363,4.786l-0.106-9.64z"/>
		<g style="&st6;">
			<path d="M110.294,478.521v-52.74"/>
			<path d="M114.545,435.419l-4.25-9.002l-4.25,9.002"/>
		</g>
		<path style="&st2;" d="M181.322,83.318h147.945"/>
		<text transform="matrix(1 0 0 1 239.0083 76.0674)"><tspan x="0" y="0" style="&st10;">context</tspan></text>
		<path d="M281.845,67.549l7.471,4.854l-7.363,4.786l-0.107-9.641z"/>
		<path style="&st6;" d="M182.241,226.029h147.945"/>
		<path style="&st2;" d="M319.582,230.035l9.001-4.251l-9.001-4.25"/>
		<path style="&st1;" d="M470.394,244.201H330.25v-38.117h140.144v38.117z"/>
		<text transform="matrix(1 0 0 1 338.3276 219.7793)"><tspan x="0" y="0" style="&st10;">lib::node_navigator</tspan></text>
		<path style="&st2;" d="M330.323,230.025H470.81"/>
		<path style="&st0;" d="M499.842,219.891h-58.258v-24.455h58.258v24.455z"/>
		<text transform="matrix(1 0 0 1 449.6685 211.9312)"><tspan x="0" y="0" style="&st10;">lib::node</tspan></text>
		<text transform="matrix(1 0 0 1 197.7603 219.627)"><tspan x="0" y="0" style="&st10;">&lt;&lt;implementation&gt;&gt;</tspan></text>
		<path style="&st1;" d="M469.361,423.322H329.218V319.795h140.143v103.527z"/>
		<text transform="matrix(1 0 0 1 378.5981 346.5991)"><tspan x="0" y="0" style="&st10;">lib::inode</tspan></text>
		<text transform="matrix(1 0 0 1 363.9292 332.1206)"><tspan x="0" y="0" style="&st10;">&lt;&lt;interface&gt;&gt;</tspan></text>
		<path style="&st2;" d="M329.291,357.736h140.486"/>
		<text transform="matrix(1 0 0 1 343.9624 375.895)" style="&st10;"><tspan x="0" y="0">down(): *inode</tspan><tspan x="0" y="14.5">up(): *inode</tspan><tspan x="0" y="29">next(): *inode</tspan></text>
		<g>
			<path style="&st2;" d="M311.458,451.245v77.845H450.32v-68.055l-17.25-9.79H311.458z"/>
			<path style="&st3;" d="M433.07,451.245v9.694h15.523"/>
		</g>
		<text transform="matrix(1 0 0 1 318.3159 466.1763)" style="&st10;"><tspan x="0" y="0">lib::tree_iterator</tspan><tspan x="0" y="14.5">and lib::node_navigator</tspan><tspan x="0" y="29">require a template</tspan><tspan x="0" y="43.5">argument with this</tspan><tspan x="0" y="58">interface</tspan></text>
		<path style="&st6;" d="M382.046,425.743l-23.629,23.629"/>
	</g>
</svg>
