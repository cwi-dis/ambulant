This directory contains an example of embedding Ambulant in a Python application.
It is a minimal re-implementation of "player_unix": a Qt-based Ambulant Player.
It has been tested on MacOSX (and should work on Linux).

You need the following prerequisites:
- Python. Testing has been done with 2.5, 2.4 should work too, earlier probably not.
  Obtain it via <http://www.python.org>
- Qt 3 (Ambulant does not yet work with Qt 4).
  Obtain it via <http://www.trolltech.com>. Testing was done with "qt-mac-free-3.3.6".
- PyQt. Get it from <http://www.riverbankcomputing.co.uk/pyqt/>
  The version needs to be compatible with your Python and Qt version.
  As of this writing Python 2.5 was not yet released, so I built from source,
  from "PyQt-mac-gpl-3-snapshot-20060730". Building from source also required
  Sip (also from riverbankcomputing), I used version "sip-snapshot-20060805".
- A build of AmbulantPlayer that has support for Qt and Python (see below).

Next you need to build the prerequisites (and maybe install them too):
- Build and install Python in the usual way. On MacOSX build a normal framework Python.
  Test by running some of the standard tests.
- Build Qt. I built it in ~/packages/qt-mac-free-3.3.6 and I didn't install it (that's what the
  Qt readme seemed to suggest). You need to add some environment variables
  to make the build work:

    QTDIR=$HOME/packages/qt-mac-free-3.3.6
    PATH=$PATH:$QTDIR/bin
    DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$QTDIR/lib
    export QTDIR PATH DYLD_LIBRARY_PATH

  Test Qt by running some of the example programs (I tried Hello.app).
- Build Sip and PyQt. First make sure that "python" actually refers to the version
  you want (start it and check the version number), then build and install Sip, then
  build and install PyQt.
  Test PyQt by running some of the example programs.
- Build Ambulant. I build in separate build directories (ambulant/build-mac, ambulant/build-qt)
  but this is not required, only convenient. You need to configure ambulant
  --with-qt and --with-python. Check the configure output to verify that Python and Qt
  support are indeed included:-)
  
  XXXX I needed to make two modifications before things worked on MacOSX:
  XXXX - Edit ambulant/src/player_unix/Makefile, replace "-lqt-mt" with "-lqt -lintl".
  XXXX - Edit qt-mac-free-3.3.6/lib/libqt.la and set "dependency_libs='-lz'"

  If you really don't want to install this version you can skip that step, but you need
  to set a couple of environment variables:
  
    amsrc=$HOME/src/ambulant  # or whatever
    ambld=$amsrc/build-qt  # or whatever
    PYTHONPATH=$PYTHONPATH:$amsrc/src/pyambulant/build/lib.*
    DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$ambld/src/libambulant/.libs
    export PYTHONPATH DYLD_LIBRARY_PATH
  
  Testing Ambulant on Linux is easy: run player_unix/AmbulantPlayer_qt
  Testing Ambulant on MacOSX is a bit more difficult because our Makefile for
  the qt player does not create the .app bundle stuff MacOSX requires. The easiest
  way to do a simple test is copy the Qt example hello.app somewhere, copy AmbulantPlayer_qt
  to hello.app/Contents/MacOSX/hello and run the resulting hello.app.
  
  Testing the Ambulant Python interface is also fairly simple:
  
    python
    >>> import ambulant
    >>> print ambulant.get_version()
    '1.7'
    >>>
    